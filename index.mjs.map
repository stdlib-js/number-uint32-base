{"version":3,"file":"index.mjs","sources":["../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/*\n* When adding modules to the namespace, ensure that they are added in alphabetical order according to module name.\n*/\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-read-only-property';\n\n\n// MAIN //\n\n/**\n* Top-level namespace.\n*\n* @namespace ns\n*/\nvar ns = {};\n\n/**\n* @name fromBinaryStringUint32\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/uint32/base/from-binary-string}\n*/\nimport fromBinaryStringUint32 from '@stdlib/number-uint32-base-from-binary-string';\nsetReadOnly( ns, 'fromBinaryStringUint32', fromBinaryStringUint32 );\n\n/**\n* @name rotl32\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/uint32/base/rotl}\n*/\nimport rotl32 from '@stdlib/number-uint32-base-rotl';\nsetReadOnly( ns, 'rotl32', rotl32 );\n\n/**\n* @name rotr32\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/uint32/base/rotr}\n*/\nimport rotr32 from '@stdlib/number-uint32-base-rotr';\nsetReadOnly( ns, 'rotr32', rotr32 );\n\n/**\n* @name toBinaryStringUint32\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/uint32/base/to-binary-string}\n*/\nimport toBinaryStringUint32 from '@stdlib/number-uint32-base-to-binary-string';\nsetReadOnly( ns, 'toBinaryStringUint32', toBinaryStringUint32 );\n\n/**\n* @name uint32ToInt32\n* @memberof ns\n* @readonly\n* @type {Function}\n* @see {@link module:@stdlib/number/uint32/base/to-int32}\n*/\nimport uint32ToInt32 from '@stdlib/number-uint32-base-to-int32';\nsetReadOnly( ns, 'uint32ToInt32', uint32ToInt32 );\n\n\n// EXPORTS //\n\nexport default ns;\n"],"names":["ns","setReadOnly","fromBinaryStringUint32","rotl32","rotr32","toBinaryStringUint32","uint32ToInt32"],"mappings":";;+uCAoCA,IAAAA,EAAA,CAAA,EAUAC,EAAAD,EAAA,yBAAAE,GAUAD,EAAAD,EAAA,SAAAG,GAUAF,EAAAD,EAAA,SAAAI,GAUAH,EAAAD,EAAA,uBAAAK,GAUAJ,EAAAD,EAAA,gBAAAM"}